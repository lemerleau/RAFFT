RAFFT is a folding tool that builds fast-folding paths for a given sequence.
Starting from the completely unfolded structure, it quickly identifies stems
with an FFT-based technique. Then, it forms the stem that improves the overall
stability. Multiple folding paths can be explored and displayed. Therefore,
given a sequence, the user will obtain several structures or folding paths.

* Requirements
- Vienna RNA package (version >= 2.4.17)
- Numpy, scipy with python 3
* Installation
To install RAFFT in your local python library

#+begin_src bash :results output
pip install . --user --upgrade
#+end_src

Then two command line tools will be available: ~rafft~ for the folding and
~rafft_kin~ for the kinetic analysis.

* Usage
For the examples, we used the Coronavirus frameshifting stimulation element
obtained from RFAM.

To display only the final structures:
#+begin_src bash :results output
rafft -s GGGUUUGCGGUGUAAGUGCAGCCCGUCUUACACCGUGCGGCACAGGCACUAGUACUGAUGUCGUAUACAGGGCUUUUGACAU  -ms 5
#+end_src

To display the visited/saved intermediates:
#+begin_src bash :results output
rafft -s GGGUUUGCGGUGUAAGUGCAGCCCGUCUUACACCGUGCGGCACAGGCACUAGUACUGAUGUCGUAUACAGGGCUUUUGACAU  -ms 5  --traj
#+end_src

The algorithm has two critical parameters:
- ~-ms <INT>~ is the number of saved structures at each folding step (default=1)
- ~-n  <INT>~ is the number of positional lag to search for stems (default=100)

The search of stems can be tuned using weights on base pairs types:
- ~--GC <FLOAT>~ GC base pairs weight (default = 3.0)
- ~--AU <FLOAT>~ AU base pairs weight (default = 2.0)
- ~--GU <FLOAT>~ GU base pairs weight (default = 1.0)

* Inputs
The input is one sequence in the standard input or a simple text file (it can be
in Fasta format).

* Outputs
For the trajectory output format: at each step, numbered from 0 to 3, the
structures saved are given below the sequence with their stability (computed
with Vienna RNA API).


#+begin_example
GGGUUUGCGGUGUAAGUGCAGCCCGUCUUACACCGUGCGGCACAGGCACUAGUACUGAUGUCGUAUACAGGGCUUUUGACAU
# ---------0----------
..................................................................................    0.0
# ---------1----------
.....(((((((((((..........))))))))))).............................................  -14.0
..................................((((((((................))))))))................   -6.8
...................(((((.............................................)))))........   -6.4
..................................((((.......)))).................................   -5.5
(((((..............)))))..........................................................   -4.6
# ---------2----------
........((((((((..........))))))))(((((((((((.........))).))))))))................  -23.1
........((((((((..........))))))))((((((((..((........))..))))))))................  -20.9
...................(((((..........(((((((((((.........))).))))))))...)))))........  -18.8
........((((((((..........))))))))((((((((...((....)).....))))))))................  -18.7
.....(((((((((((.((.....)))))))))))))....................((((((.............))))))  -18.2
# ---------3----------
........((((((((.((.....))))))))))(((((((((((.........))).))))))))................  -24.0
........((((((((.((.....))))))))))(((((((((((((....)).))).))))))))................  -24.0
........((((((((..........))))))))(((((((((((.........))).))))))))................  -23.1
........((((((((.((.....))))))))))((((((((..((........))..))))))))................  -21.8
........((((((((..........))))))))((((((((..((........))..))))))))................  -20.9
#+end_example

The output of the final structures only is the following.

#+begin_example
GGGUUUGCGGUGUAAGUGCAGCCCGUCUUACACCGUGCGGCACAGGCACUAGUACUGAUGUCGUAUACAGGGCUUUUGACAU
........((((((((.((.....))))))))))(((((((((((.........))).))))))))................  -24.0
........((((((((.((.....))))))))))(((((((((((((....)).))).))))))))................  -24.0
........((((((((..........))))))))(((((((((((.........))).))))))))................  -23.1
........((((((((.((.....))))))))))((((((((..((........))..))))))))................  -21.8
........((((((((..........))))))))((((((((..((........))..))))))))................  -20.9
#+end_example

* Analysis
** Fast-paths plot
To create the fast-folding path figures, one can use the utility
~utility/plot_path.py~ on rafft output:

*It uses [[http://varna.lri.fr][VARNA]] to produce the secondary structure representation, should be
download directly from its website*

#+begin_src bash :results output
cd example
rafft -s GGGUUUGCGGUGUAAGUGCAGCCCGUCUUACACCGUGCGGCACAGGCACUAGUACUGAUGUCGUAUACAGGGCUUUUGACAU -ms 5 --traj > rafft.out
python ../utility/plot_path.py rafft.out -he 500 -wi 900 -rv 1 -o path_5.png
#+end_src

[[example/path_5.png]]

With 20 saved structures:

[[example/path_20.png]]

** Kinetic trajectory
From the above fast-folding graph, one can produce kinetic trajectories.
Starting from the completely unfolded structures, it simulates the folding
process.

#+begin_src bash :results output
cd example
rafft -s GGGUUUGCGGUGUAAGUGCAGCCCGUCUUACACCGUGCGGCACAGGCACUAGUACUGAUGUCGUAUACAGGGCUUUUGACAU -ms 30 --traj > rafft_20.out
rafft_kin rafft_20.out -o kinetic.png --plot 
#+end_src

#+RESULTS:
#+begin_example
.....(((((((((((..........))))))))))).............................................  0.000 -14.0 1
..................................((((((((................))))))))................  0.000  -6.8 2
...................(((((.............................................)))))........  0.000  -6.4 3
..................................((((.......)))).................................  0.000  -5.5 4
(((((..............)))))..........................................................  0.000  -4.6 5
..............(((((..........................)))))................................  0.000  -4.2 6
...............((((....................)))).......................................  0.000  -3.4 7
.........................................................((((((.............))))))  0.000  -3.3 8
....(((((.......))))).............................................................  0.000  -2.8 9
..................................((((.............))))...........................  0.000  -2.6 10
......((((............))))........................................................  0.000  -2.5 11
....................(((...............))).........................................  0.000  -2.4 12
......................((((..........))))..........................................  0.000  -2.4 13
...........................................................(((........))).........  0.000  -2.1 14
....................(((.....................)))...................................  0.000  -1.9 15
................((((...............))))...........................................  0.000  -1.4 16
........(((.........)))...........................................................  0.000  -1.4 17
............................................((((..........))))....................  0.000  -1.1 18
...................................................((((.......))))................  0.000  -0.8 19
.......................................((....))...................................  0.000  -0.6 20
....(((((..........................)))))..........................................  0.000  -0.5 21
........................(((((.......................................))))).........  0.000  -0.4 22
......................................................(((..........)))............  0.000  -0.4 23
.....(((...............................)))........................................  0.000  -0.4 24
..(((((...................................)))))...................................  0.000  -0.3 25
................................((....))..........................................  0.000  -0.3 26
...........................................((((........................)))).......  0.000  -0.2 27
.....(((.....................................)))..................................  0.000  -0.2 28
..................................................................................  0.000   0.0 29
........((((((((..........))))))))(((((((((((.........))).))))))))................  0.000 -23.1 132
........((((((((..........))))))))((((((((..((........))..))))))))................  0.000 -20.9 148
...................(((((..........(((((((((((.........))).))))))))...)))))........  0.000 -18.8 32
........((((((((..........))))))))((((((((...((....)).....))))))))................  0.000 -18.7 33
.....(((((((((((.((.....)))))))))))))....................((((((.............))))))  0.000 -18.2 34
.....(((((((((((.((.....)))))))))))))(((((................)))))...................  0.000 -17.6 35
.....(((((((((((..........)))))))))))......((((....((((.......)))).....)))).......  0.000 -17.6 36
..((((((((((((((..........))))))))).......)))))..........((((((.............))))))  0.000 -17.4 37
.....(((((((((((..........)))))))))))....................((((((.............))))))  0.000 -17.3 38
.....(((((((((((.((.....)))))))))))))......................(((........))).........  0.000 -17.0 39
(((((..............)))))..........(((((((((((.........))).))))))))................  0.000 -17.0 40
...................(((((..........((((((((..((........))..))))))))...)))))........  0.000 -16.6 41
(((((.(((.......))))))))..........((((((((................))))))))................  0.000 -16.4 42
.....(((((((((((.((.....))))))))))))).....(((.........))).........................  0.000 -16.3 43
........((((((((..........))))))))((((.......)))).................................  0.000 -16.2 44
..((((((((((((((..........))))))))).......)))))............(((........))).........  0.000 -16.2 45
.....(((((((((((..........)))))))))))......................(((........))).........  0.000 -16.1 46
.....(((((((((((.((.....))))))))))))).......((((..........))))....................  0.000 -16.0 47
.....(((((((((((..........))))))))))).......(((((.......).))))....................  0.000 -16.0 48
..((((((((((((((.((.....))))))))))))).))).........................................  0.000 -15.8 49
.....(((((((((((.((.....)))))))))))))..............((((.......))))................  0.000 -15.7 50
.....(((((((((((.((.....)))))))))))))..((....))...................................  0.000 -15.5 51
.....(((((((((((..........))))))))))).......((((.((....)).))))....................  0.000 -15.5 52
.....(((((((((((.((.....))))))))))))).................(((..........)))............  0.000 -15.3 53
.....(((((((((((..........)))))))))))......((((....(((...........)))...)))).......  0.000 -15.3 54
....(((((.......))))).............(((((((((((.........))).))))))))................  0.000 -15.2 55
.....(((((((((((.((.....)))))))))))))......((((........................)))).......  0.000 -15.1 56
(((((.(((.......))))))))..........((((.......)))).................................  0.000 -15.1 57
.....(((((((((((..........)))))))))))......((((.((..................)).)))).......  0.000 -15.0 58
......((((............))))........(((((((((((.........))).))))))))................  0.000 -14.9 59
(((((.(((.......))))))))(((((.....(((((((((((.........))).))))))))..))))).........  0.000 -24.5 126
........((((((((.((.....))))))))))(((((((((((.........))).))))))))................  0.000 -24.0 127
........((((((((.((.....))))))))))(((((((((((((....)).))).))))))))................  0.000 -24.0 128
.....(((((((((((.((.....)))))))))))))((((((((.........))).)))))...................  0.000 -23.2 131
........((((((((..........))))))))(((((((((((.........))).))))))))................  0.000 -23.1 132
(((((.(((.......))))))))........(((((((((((((.........))).))))))))...))...........  0.000 -22.9 136
((((((((.......))).)))))(((((.....(((((((((((.........))).))))))))..))))).........  0.000 -22.3 141
(((((.(((.......))))))))(((((.....((((((((..((........))..))))))))..))))).........  0.000 -22.3 142
(((((.(((.......))))))))(((.......(((((((((((.........))).))))))))...........)))..  0.000 -22.2 144
(((.(((((.......))))))))..........(((((((((((.........))).))))))))................  0.000 -22.0 145
........((((((((.((.....))))))))))((((((((..((........))..))))))))................  0.000 -21.8 146
.....(((((((((((.((.....)))))))))))))(((((..((........))..)))))...................  0.000 -21.0 147
........((((((((..........))))))))((((((((..((........))..))))))))................  0.000 -20.9 148
......(((.......)))(((((((........(((((((((((.........))).)))))))))).)))))........  0.000 -20.8 149
.....(((((((((((.((.....)))))))))))))...((.((((.((.((((.......))))..)).)))).))....  0.000 -20.7 116
.....(((((((((((.((.....)))))))))))))...((.((((.((.((((.......))))...)))))).))....  0.000 -20.7 117
((((((((.......))).)))))........(((((((((((((.........))).))))))))...))...........  0.000 -20.7 118
(((((.(((.......))))))))........((((((((((..((........))..))))))))...))...........  0.000 -20.7 119
.........((((......(((((((........(((((((((((.........))).)))))))))).)))))....))))  0.000 -20.6 78
........((((((((.((.....))))))))))((((.......))))........((((((.............))))))  0.000 -20.4 79
..((((((((((((((.((.....))))))))))))).)))..((((.((.((((.......))))..)).)))).......  0.000 -20.2 80
..((((((((((((((.((.....))))))))))))).)))..((((.((.((((.......))))...)))))).......  0.000 -20.2 81
(((((.(((.......))))))))(((((.....((((((((...((....)).....))))))))..))))).........  0.000 -20.1 82
((((((((.......))).)))))(((.......(((((((((((.........))).))))))))...........)))..  0.000 -20.0 83
(((((.(((.......))))))))(((.......((((((((..((........))..))))))))...........)))..  0.000 -20.0 84
.....(((((((((((.((.....)))))))))))))...((.((((....((((.......)))).....)))).))....  0.000 -19.9 85
.....(((((((((((.((.....))))))))))))).....(((.........)))((((((.............))))))  0.000 -19.6 86
.....(((((((((((.((.....)))))))))))))...((.((((.((.(((.((....))..))))).)))).))....  0.000 -19.5 87
..((((((((((((((.((.....))))))))))))).)))..((((....((((.......)))).....)))).......  0.000 -19.4 88
.....(((((((((((.((.....)))))))))))))...((.((((.((.(((...........))))).)))).))....  0.000 -19.4 89
(((((.(((.......))))))))(((.....(((((((((((((.........))).))))))))...))......)))..  0.000 -25.8 121
(((((.(((.......))))))))(((.....(((((((((((((.........))).))))))))....)).....)))..  0.000 -25.1 123
(((.(((((.......))))))))(((((.....(((((((((((.........))).))))))))..))))).........  0.000 -24.5 124
(((((.(((.......))))))))(((((.....(((((((((((((....)).))).))))))))..))))).........  0.000 -24.5 125
(((((.(((.......))))))))(((((.....(((((((((((.........))).))))))))..))))).........  0.000 -24.5 126
........((((((((.((.....))))))))))(((((((((((.........))).))))))))................  0.000 -24.0 127
........((((((((.((.....))))))))))(((((((((((((....)).))).))))))))................  0.000 -24.0 128
((((((((.......))).)))))(((.....(((((((((((((.........))).))))))))...))......)))..  0.000 -23.6 129
(((((.(((.......))))))))(((.....((((((((((..((........))..))))))))...))......)))..  0.000 -23.6 130
.....(((((((((((.((.....)))))))))))))((((((((.........))).)))))...................  0.000 -23.2 131
........((((((((..........))))))))(((((((((((.........))).))))))))................  0.000 -23.1 132
(((.(((((.......))))))))........(((((((((((((.........))).))))))))...))...........  0.000 -22.9 133
((((((((.......))).)))))(((.....(((((((((((((.........))).))))))))....)).....)))..  0.000 -22.9 134
(((((.(((.......))))))))(((.....((((((((((..((........))..))))))))....)).....)))..  0.000 -22.9 135
(((((.(((.......))))))))........(((((((((((((.........))).))))))))...))...........  0.000 -22.9 136
(((((.(((.......))))))))(((...(...(((((((((((.........))).))))))))....)......)))..  0.000 -22.6 138
(((((.(((.......))))))))(((.....(.(((((((((((.........))).))))))))...).......)))..  0.000 -22.5 140
((((((((.......))).)))))(((((.....(((((((((((.........))).))))))))..))))).........  0.000 -22.3 141
(((((.(((.......))))))))(((((.....((((((((..((........))..))))))))..))))).........  0.000 -22.3 142
(((.(((((.......))))))))(((.......(((((((((((.........))).))))))))...........)))..  0.000 -22.2 143
(((((.(((.......))))))))(((.......(((((((((((.........))).))))))))...........)))..  0.000 -22.2 144
(((.(((((.......))))))))..........(((((((((((.........))).))))))))................  0.000 -22.0 145
........((((((((.((.....))))))))))((((((((..((........))..))))))))................  0.000 -21.8 146
.....(((((((((((.((.....)))))))))))))(((((..((........))..)))))...................  0.000 -21.0 147
........((((((((..........))))))))((((((((..((........))..))))))))................  0.000 -20.9 148
......(((.......)))(((((((........(((((((((((.........))).)))))))))).)))))........  0.000 -20.8 149
.....(((((((((((.((.....)))))))))))))...((.((((.((.((((.......))))..)).)))).))....  0.000 -20.7 116
.....(((((((((((.((.....)))))))))))))...((.((((.((.((((.......))))...)))))).))....  0.000 -20.7 117
((((((((.......))).)))))........(((((((((((((.........))).))))))))...))...........  0.000 -20.7 118
(((((.(((.......))))))))........((((((((((..((........))..))))))))...))...........  0.000 -20.7 119
(((.(((((.......))))))))(((.....(((((((((((((.........))).))))))))...))......)))..  0.000 -25.8 120
(((((.(((.......))))))))(((.....(((((((((((((.........))).))))))))...))......)))..  0.000 -25.8 121
(((.(((((.......))))))))(((.....(((((((((((((.........))).))))))))....)).....)))..  0.000 -25.1 122
(((((.(((.......))))))))(((.....(((((((((((((.........))).))))))))....)).....)))..  0.000 -25.1 123
(((.(((((.......))))))))(((((.....(((((((((((.........))).))))))))..))))).........  0.000 -24.5 124
(((((.(((.......))))))))(((((.....(((((((((((((....)).))).))))))))..))))).........  0.000 -24.5 125
(((((.(((.......))))))))(((((.....(((((((((((.........))).))))))))..))))).........  0.000 -24.5 126
........((((((((.((.....))))))))))(((((((((((.........))).))))))))................  0.000 -24.0 127
........((((((((.((.....))))))))))(((((((((((((....)).))).))))))))................  0.000 -24.0 128
((((((((.......))).)))))(((.....(((((((((((((.........))).))))))))...))......)))..  0.000 -23.6 129
(((((.(((.......))))))))(((.....((((((((((..((........))..))))))))...))......)))..  0.000 -23.6 130
.....(((((((((((.((.....)))))))))))))((((((((.........))).)))))...................  0.000 -23.2 131
........((((((((..........))))))))(((((((((((.........))).))))))))................  0.000 -23.1 132
(((.(((((.......))))))))........(((((((((((((.........))).))))))))...))...........  0.000 -22.9 133
((((((((.......))).)))))(((.....(((((((((((((.........))).))))))))....)).....)))..  0.000 -22.9 134
(((((.(((.......))))))))(((.....((((((((((..((........))..))))))))....)).....)))..  0.000 -22.9 135
(((((.(((.......))))))))........(((((((((((((.........))).))))))))...))...........  0.000 -22.9 136
(((.(((((.......))))))))(((...(...(((((((((((.........))).))))))))....)......)))..  0.000 -22.6 137
(((((.(((.......))))))))(((...(...(((((((((((.........))).))))))))....)......)))..  0.000 -22.6 138
(((.(((((.......))))))))(((.....(.(((((((((((.........))).))))))))...).......)))..  0.000 -22.5 139
(((((.(((.......))))))))(((.....(.(((((((((((.........))).))))))))...).......)))..  0.000 -22.5 140
((((((((.......))).)))))(((((.....(((((((((((.........))).))))))))..))))).........  0.000 -22.3 141
(((((.(((.......))))))))(((((.....((((((((..((........))..))))))))..))))).........  0.000 -22.3 142
(((.(((((.......))))))))(((.......(((((((((((.........))).))))))))...........)))..  0.000 -22.2 143
(((((.(((.......))))))))(((.......(((((((((((.........))).))))))))...........)))..  0.000 -22.2 144
(((.(((((.......))))))))..........(((((((((((.........))).))))))))................  0.000 -22.0 145
........((((((((.((.....))))))))))((((((((..((........))..))))))))................  0.000 -21.8 146
.....(((((((((((.((.....)))))))))))))(((((..((........))..)))))...................  0.000 -21.0 147
........((((((((..........))))))))((((((((..((........))..))))))))................  0.000 -20.9 148
......(((.......)))(((((((........(((((((((((.........))).)))))))))).)))))........  0.000 -20.8 149
..................................................................................  1.000   0.0 29
#+end_example

[[example/kinetic.png]]

The output has the following form

#+begin_example
[...]
<structure>                                                                   <population> <Energy> <Structure ID>
.....(((((((((((.((.....)))))))))))))((((((((.........))).)))))...................  0.009 -23.2 44
........((((((((..........))))))))(((((((((((.........))).))))))))................  0.011 -23.1 21
((((((((.......))).)))))(((.....(((((((((((((.........))).))))))))...))......)))..  0.014 -23.6 62
(((((.(((.......))))))))(((.....((((((((((..((........))..))))))))...))......)))..  0.014 -23.6 63
........((((((((.((.....))))))))))(((((((((((.........))).))))))))................  0.049 -24.0 42
........((((((((.((.....))))))))))(((((((((((((....)).))).))))))))................  0.049 -24.0 43
(((((.(((.......))))))))(((((.....(((((((((((.........))).))))))))..))))).........  0.063 -24.5 41
(((((.(((.......))))))))(((((.....(((((((((((((....)).))).))))))))..))))).........  0.063 -24.5 61
(((((.(((.......))))))))(((.....(((((((((((((.........))).))))))))....)).....)))..  0.168 -25.1 60
(((((.(((.......))))))))(((.....(((((((((((((.........))).))))))))...))......)))..  0.531 -25.8 59
#+end_example

** Folding landscape
From the fast-folding graph, one can also draw a landscape using the
multidimensional scaling algorithm to map the structures onto a plan. It tries
to preserve as much as possible the base pair distance between structures.

#+begin_src bash :results output
cd example
python ../rafft.py -s GGGUUUGCGGUGUAAGUGCAGCCCGUCUUACACCGUGCGGCACAGGCACUAGUACUGAUGUCGUAUACAGGGCUUUUGACAU -ms 20 --verbose > rafft_20.out
python ../utility/surface.py rafft_20.out -o landscape.png
#+end_src

#+RESULTS:

(Initial and minimum energy structure are circled in black)

[[example/landscape.png]]

* Reproducibility of the benchmarks
The dataset curated we used for the benchmarks is in
~benchmarks_results/benchmark_cleaned_all_length.csv~.

The benchmark results files (and associated script to produce them) are given in
the following table (for details about those results, see the associated
reference):
|--------+---------------------------------------+-------------------------------|
| Method | file                                  | Notes                         |
|--------+---------------------------------------+-------------------------------|
| RAFFT  | ~rafft_100n_50ms_best_nrj_scores.csv~ | ~-n 100 -ms 50~ (best energy) |
|        | ~rafft_100n_50ms_scores.csv~          | ~-n 100 -ms 50~ (best score)  |
|        | ~rafft_200n_200ms_scores.csv~         | ~-n 200 -ms 200~ (best score) |
|--------+---------------------------------------+-------------------------------|
| MFE    | ~mfe_scores.csv~                      | ~bench_mfe.py~                |
|--------+---------------------------------------+-------------------------------|
| ML     | ~mxfold_scores.csv~                   | ~bench_mxfold.py~             |
|--------+---------------------------------------+-------------------------------|

~analysis.org~ and ~utils_analysis.py~ contain the pieces of script used to
perform the analysis and the figures.

For the test case, we used the command line given in the Usage section above.
Figures were derived from their output.
